// Here's where to put stuff that is defined outside the main program

use clap::{App, Arg};
use std::error::Error;
use std::fs::File;
use std::io::{self, BufRead, BufReader};
//use serde_json::{Result, Value};

type JSONResult<T> = Result<T, Box<dyn Error>>;

#[derive(Debug)]
pub struct Config {
    scan_file: String,
    dhcp_file: String
}

pub fn get_args() -> JSONResult<Config> {

    let matches = App::new("merge-hosts")
        .version("0.1.0")
        .author("Mark Lamourine <markllama@gmail.com>")
        .about("Merge two JSON files describing network hosts")
        .arg(
            Arg::with_name("scan_file")
                .long("scan-file")
                .short("s")
                .value_name("SCAN_FILE")
                .help("A JSON file generated by an NMAP scan")
                .required(true)
                .min_values(1)
        )
        .arg(
            Arg::with_name("dhcp_file")
                .long("dhcp-file")
                .short("d")
                .value_name("DHCP_FILE")
                .help("A converted file from a DHCP service")
                .required(true)
                .min_values(1)
        )
        .get_matches();

    Ok(Config {
        scan_file: matches.value_of("scan_file").unwrap().to_string(),
        dhcp_file: matches.value_of("dhcp_file").unwrap().to_string()
    })
}


pub fn run(config: Config) -> JSONResult<()> {

    println!("{}", config.scan_file);
    println!("{}", config.dhcp_file);


    // open a file
    
    Ok(())
    
}



